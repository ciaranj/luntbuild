<project name="luntbuild" default="installer" basedir="..">

    <tstamp>
      <format property="currentDate" pattern="MM-dd-yyyy" locale="en"/>
    </tstamp>

    <property name="buildVersion" value="1.3.5"/>
	<property name="fileVersion" value="1.3.5"/>
    <property name="buildId" value=""/>
    <property name="artifactsDir" value="${basedir}/distribute"/>
	<property name="junitHtmlReportDir" value="test/junitHtmlReport"/>
    <property name="buildDate" value="${currentDate}"/>
    <property name="luntbuild-install-build" value="D:/luntbuild-${fileVersion}"/>

    <property name="compile-with-debug" value="on"/>
    <property name="compile-source-level" value="1.4"/>
    <property name="compile-target-level" value="1.4"/>

    <patternset id="web.images">
        <include name="**/*.gif"/>
        <include name="**/*.bmp"/>
        <include name="**/*.jpg"/>
        <include name="**/*.png"/>
    	<include name="**/*.ico"/>
    </patternset>

    <patternset id="web.css">
        <include name="**/*.css"/>
    </patternset>

    <patternset id="web.other_resources">
        <include name="**/*.htm"/>
        <include name="**/*.html"/>
        <include name="**/*.jsp"/>
        <include name="**/*.page"/>
        <include name="**/*.jwc"/>
        <include name="**/*.xml"/>
        <include name="**/*.properties"/>
        <include name="**/*.library"/>
        <include name="**/*.application"/>
        <include name="**/*.js"/>
		<exclude name="**/web.xml"/>
		<exclude name="**/applicationContext.xml"/>
    </patternset>

    <path id="classpath">
        <fileset dir="lib" includes="**/*.jar"/>
        <fileset dir="lib/sametime" includes="**/*.jar"/>
        <fileset dir="standalone/lib" includes="**/*.jar"/>
    </path>

	<path id="classpath.test">
		<fileset dir="lib" includes="**/*.jar"/>
        <fileset dir="lib/sametime" includes="**/*.jar"/>
        <fileset dir="standalone/lib" includes="**/*.jar"/>
		<pathelement location="stage/web/WEB-INF/classes"/>
		<pathelement location="test/classes"/>
	</path>

	<target name="webstage_compile">
		<mkdir dir="stage/web/WEB-INF/classes"/>
        <echo message="Compiling using source level: ${compile-source-level}, target level: ${compile-target-level}"/>
        <javac sourcepath="" srcdir="src" destdir="stage/web/WEB-INF/classes"
            debug="${compile-with-debug}" source="${compile-source-level}" target="${compile-target-level}">
            <classpath refid="classpath"/>
        </javac>
	</target>

    <target name="webstage" depends="webstage_compile, compile-standalone" >
		<filter token="installDir" value="${luntbuild-install-build}"/>
		<filter token="sessionTimeout" value="30"/>
		<copy file="web/WEB-INF/web.xml" tofile="stage/web/WEB-INF/web.xml"
			overwrite="true" filtering="true" />
		<copy file="web/WEB-INF/applicationContext.xml"
			tofile="stage/web/WEB-INF/applicationContext.xml" overwrite="true" filtering="true" />
		<copy todir="stage/web/images" flatten="true">
			<fileset dir="web">
				<patternset refid="web.images"/>
			</fileset>
			<fileset dir="src">
				<patternset refid="web.images"/>
			</fileset>
		</copy>
		<copy todir="stage/web/css" flatten="true">
			<fileset dir="web">
				<patternset refid="web.css"/>
			</fileset>
		</copy>
		<copy todir="stage/web">
			<fileset dir="web">
				<patternset refid="web.other_resources"/>
			</fileset>
		</copy>
		<copy todir="stage/web/WEB-INF/lib">
			<fileset dir="lib">
				<exclude name="**/servlet*.jar"/>
			</fileset>
            <fileset dir="lib/sametime">
            </fileset>
		</copy>
        <copy todir="stage/web/WEB-INF/classes">
            <fileset dir="src">
                <patternset refid="web.other_resources"/>
            </fileset>
        </copy>
        <copy todir="stage">
            <fileset dir="config">
                <include name="*.xsl"/>
            </fileset>
        </copy>
    </target>

    <!-- Used for development, please do not remove. lubosp.
    The luntbuild.war deployment file is in stage/luntbuild.war.
      -->
    <target name="war" depends="webstage">
        <delete file="stage/web/WEB-INF/web.xml"/>
        <delete file="stage/web/WEB-INF/applicationContext.xml"/>
        <filter token="installDir" value="${luntbuild-install-dir}"/>
        <filter token="sessionTimeout" value="30"/>
        <filter token="luntbuildPassword" value="luntbuild"/>
        <filter token="ldapHost" value=""/>
        <filter token="ldapPort" value=""/>
        <filter token="ldapUrl" value=""/>
        <filter token="ldapPrefix" value=""/>
        <filter token="ldapSuffix" value=""/>
        <filter token="ldapUserDn" value=""/>
        <filter token="ldapAuthentication" value="simple"/>
        <filter token="ldapUserId" value="uid"/>
        <filter token="ldapUseLuntbuildOnFail" value="true"/>
        <filter token="ldapCreateLuntbuildUser" value="true"/>
        <filter token="ldapCanCreateProject" value="true"/>
        <filter token="ldapCanViewProject" value="true"/>
        <filter token="ldapCanBuildProject" value="true"/>
        <filter token="ldapEmailAttrName" value="mail"/>
        <copy file="web/WEB-INF/applicationContext.xml"
            tofile="stage/web/WEB-INF/applicationContext.xml" overwrite="true" filtering="true" />
        <copy file="web/WEB-INF/web.xml" tofile="stage/web.xml"
            overwrite="true" filtering="true" />
        <war basedir="stage/web" destfile="stage/luntbuild.war" webxml="stage/web.xml"/>
        <delete file="stage/web.xml"/>
    </target>

    <!-- Used for development, please do not remove. lubosp.
    This can be used with MyEclipse Deploy J2EE Project to Server... action.
    Just create a project luntbuild-deploy, run this target, and add deployment for the project.
    Then you can just build luntbuild using deploy target, deploy it by clicking on
    Deploy J2EE Project to Server... and selecting luntbuild-deploy deployment.
    Now you can start Tomcat (or your favorite servlet container).
      -->
    <target name="deploy" depends="war">
        <fail unless="app.server.webapps"
            message="Please specify servlet container webapps directory, where to copy luntbuild.war." />
        <delete dir="${app.server.webapps}/luntbuild" failonerror="false"/>
        <mkdir dir="${app.server.webapps}/luntbuild"/>
        <copy file="stage/luntbuild.war" todir="${app.server.webapps}"/>
        <unwar src="${app.server.webapps}/luntbuild.war" dest="${app.server.webapps}/luntbuild"
            overwrite="true" />
    </target>

	<target name="api" depends="webstage_compile">
		<copy todir="remoting">
			<fileset dir="lib" includes="hessian*.jar"/>
		</copy>
		<jar basedir="stage/web/WEB-INF/classes" destfile="remoting/luntbuild-api.jar">
			<include name="com/luntsys/luntbuild/facades/*.class"/>
			<include name="com/luntsys/luntbuild/facades/lb12/*.class"/>
		</jar>
		<mkdir dir="remoting/samples/classes"/>
		<javac sourcepath="" srcdir="remoting/samples/src" destdir="remoting/samples/classes"
			debug="${compile-with-debug}" source="${compile-source-level}" target="${compile-target-level}">
			<classpath>
				<fileset dir="remoting" includes="*.jar"/>
			</classpath>
		</javac>
		<javadoc sourcepath="src" classpathref="classpath" destdir="remoting/javadoc"
			author="true" version="true" use="true" windowtitle="Luntbuild remoting API">
			<fileset dir="src" defaultexcludes="yes">
				<include name="com/luntsys/luntbuild/facades/*.java"/>
				<include name="com/luntsys/luntbuild/facades/lb12/*.java"/>
			</fileset>
			<doctitle><![CDATA[<h1>Luntbuild</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2004 Luntsys Corp. All Rights Reserved.</i>]]></bottom>
		</javadoc>
	</target>

    <target name="compile-standalone" depends="webstage_compile"
        description="Compiles standalone launcher">
        <pathconvert property="luntbuild-standalone.lib.path" pathsep=" ">
          <path>
              <fileset dir="standalone/lib" includes="**/*.jar"/>
          </path>
          <chainedmapper>
            <flattenmapper/>
            <globmapper from="*" to="lib/*"/>
          </chainedmapper>
        </pathconvert>
        <pathconvert property="luntbuild.lib.path" pathsep=" ">
            <path>
                <fileset dir="lib" includes="**/*.jar"/>
                <fileset dir="lib/sametime" includes="**/*.jar"/>
            </path>
            <chainedmapper>
              <flattenmapper/>
              <globmapper from="*" to="web/WEB-INF/lib/*"/>
            </chainedmapper>
        </pathconvert>
        <jar destfile="stage/luntbuild-standalone.jar">
            <fileset dir="stage/web/WEB-INF/classes" />
            <manifest>
              <attribute name="Built-By" value="Luntbuild"/>
                <attribute name="Main-Class" value="com.luntsys.luntbuild.StandaloneLauncher"/>
                <attribute name="Class-Path" value="${luntbuild-standalone.lib.path} ${luntbuild.lib.path}"/>
            </manifest>
        </jar>
    </target>

	<target name="stage_docs">
		<copy todir="stage/docs/guide">
			<fileset dir="docs/guide">
				<exclude name="*.xsl"/>
				 <exclude name="*.docbook"/>
				<exclude name="*.pdf"/>
				<exclude name="*.project"/>
			</fileset>
		</copy>
		<copy todir="stage/docs/faq">
			<fileset dir="docs/faq">
				<exclude name="*.xsl"/>
				<exclude name="*.docbook"/>
				<exclude name="*.pdf"/>
				<exclude name="*.project"/>
			</fileset>
		</copy>
		<copy todir="stage/docs/images">
			<fileset dir="docs/images"/>
		</copy>
		<copy todir="stage/docs/zh-cn">
			<fileset dir="docs/zh-cn"/>
		</copy>

		<mkdir dir="stage/docs/javadoc"/>
		<javadoc sourcepath="src" classpathref="classpath" destdir="stage/docs/javadoc"
			author="true" version="true" use="true" windowtitle="Luntbuild Java Documentation">
			<fileset dir="src" defaultexcludes="yes">
				<include name="com/luntsys/luntbuild/facades/*.java"/>
				<include name="com/luntsys/luntbuild/db/**/*.java"/>
				<include name="com/luntsys/luntbuild/builders/**/*.java"/>
				<include name="com/luntsys/luntbuild/utility/OgnlHelper.java"/>
				<include name="com/luntsys/luntbuild/utility/Variable.java"/>
				<include name="com/luntsys/luntbuild/utility/VariableHolder.java"/>
			</fileset>
			<doctitle><![CDATA[<h1>Luntbuild</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2004 Luntsys Corp. All Rights Reserved.</i>]]></bottom>
		</javadoc>
	</target>

    <target name="stage" depends="webstage, api, stage_docs">
        <!--
                Writes some important informations about this build into a property file which
                will be used by the application to show build version, date, etc.
        -->
        <propertyfile file="stage/buildInfo.properties">
            <entry key="buildVersion" value="${buildVersion}"/>
            <entry key="buildId" value="${buildId}"/>
            <entry key="buildDate" value="${buildDate}"/>
        </propertyfile>

		<copy todir="stage/3rdparty_licenses">
			<fileset dir="3rdparty_licenses"/>
		</copy>

		<filter token="installDir" value="$INSTALL_PATH"/>
		<filter token="sessionTimeout" value="${sessionTimeout}"/>
		<filter token="luntbuildPassword" value="${luntbuildPassword}"/>
        <filter token="ldapHost" value="${ldapHost}"/>
        <filter token="ldapPort" value="${ldapPort}"/>
        <filter token="ldapUrl" value="${ldapUrl}"/>
        <filter token="ldapPrefix" value="${ldapPrefix}"/>
        <filter token="ldapSuffix" value="${ldapSuffix}"/>
        <filter token="ldapUserDn" value="${ldapUserDn}"/>
        <filter token="ldapAuthentication" value="${ldapAuthentication}"/>
        <filter token="ldapUserId" value="${ldapUserId}"/>
        <filter token="ldapUseLuntbuildOnFail" value="${ldapUseLuntbuildOnFail}"/>
        <filter token="ldapCreateLuntbuildUser" value="${ldapCreateLuntbuildUser}"/>
        <filter token="ldapCanCreateProject" value="${ldapCanCreateProject}"/>
        <filter token="ldapCanViewProject" value="${ldapCanViewProject}"/>
        <filter token="ldapCanBuildProject" value="${ldapCanBuildProject}"/>
        <filter token="ldapEmailAttrName" value="${ldapEmailAttrName}"/>
		<copy file="web/WEB-INF/web.xml" tofile="stage/web/WEB-INF/web.xml"
			overwrite="true" filtering="true" />
		<copy file="web/WEB-INF/applicationContext.xml"
			tofile="stage/web/WEB-INF/applicationContext.xml" overwrite="true" filtering="true" />

        <copy todir="stage">
            <fileset dir="." includes="*.txt,*.properties"/>
        </copy>

        <copy todir="stage" file="src/log4j.properties"/>

        <copy todir="stage/osdependent">
            <fileset dir="osdependent"/>
        </copy>

		<copy todir="stage/remoting">
			<fileset dir="remoting"/>
		</copy>
		<copy todir="stage/scripts">
			<fileset dir="installer/scripts"/>
		</copy>
		<copy todir="stage/contrib">
			<fileset dir="contrib"/>
		</copy>
    	<copy todir="stage/templates">
            <fileset dir="templates"/>
        </copy>
        <copy todir="stage/bin">
            <fileset dir="bin"/>
        </copy>
        <copy todir="stage/lib">
            <fileset dir="standalone/lib"/>
        </copy>
        <mkdir dir="stage/work"/>
        <touch file="stage/work/dummy"/>
        <mkdir dir="stage/publish"/>
        <touch file="stage/publish/dummy"/>
        <mkdir dir="stage/logs"/>
        <touch file="stage/logs/luntbuild_log.txt"/>
        <mkdir dir="stage/tmp"/>
        <touch file="stage/tmp/dummy"/>

		<delete>
            <fileset dir="stage" includes="**/*.bak,**/*#*,**/.cvsignore"/>
        </delete>
    </target>

    <target name="clean">
        <delete dir="stage" failonerror="no"/>
        <delete dir="remoting/samples/classes" failonerror="no"/>
        <delete dir="remoting/javadoc" failonerror="no"/>
        <delete failonerror="no">
			<fileset dir="remoting" includes="*.jar"/>
		</delete>
		<delete dir="test/junitReports"/>
		<delete dir="test/classes"/>
		<delete dir="${artifactsDir}"/>
		<delete dir="${junitHtmlReportDir}"/>
		<delete file="installer/install.xml.temp"/>
        <delete file="db/luntbuild.script"/>
        <delete file="db/luntbuild.script.base"/>
        <delete file="db/luntbuild.script.demo"/>
    </target>

	<target name="test_compile" depends="webstage_compile">
		<mkdir dir="test/classes"/>
		<javac srcdir="test/src" destdir="test/classes" classpathref="classpath.test"
            source="${compile-source-level}" target="${compile-target-level}"
        />
	</target>

	<target name="test" depends="test_compile">
		<mkdir dir="test/junitReports"/>
		<junit printsummary="yes">
			<formatter type="xml"/>
			<batchtest todir="test/junitReports">
				<fileset dir="test/src">
					<include name="**/*.java"/>
				</fileset>
			</batchtest>
			<classpath refid="classpath.test"/>
		</junit>

		<mkdir dir="${junitHtmlReportDir}"/>
		<junitreport todir="test/junitReports">
			<fileset dir="test/junitReports">
				<include name="TEST-*.xml"/>
			</fileset>
			<report todir="${junitHtmlReportDir}"/>
		</junitreport>
	</target>

	<target name="zip" depends="stage" description="Builds Luntbuild zip distribution">
        <filter token="ldapHost" value=""/>
        <filter token="ldapPort" value=""/>
        <filter token="ldapUrl" value=""/>
        <filter token="ldapPrefix" value=""/>
        <filter token="ldapSuffix" value=""/>
        <filter token="ldapUserDn" value=""/>
        <filter token="ldapAuthentication" value="simple"/>
        <filter token="ldapUserId" value="uid"/>
        <filter token="ldapUseLuntbuildOnFail" value="true"/>
        <filter token="ldapCreateLuntbuildUser" value="true"/>
        <filter token="ldapCanCreateProject" value="true"/>
        <filter token="ldapCanViewProject" value="true"/>
        <filter token="ldapCanBuildProject" value="true"/>
        <filter token="ldapEmailAttrName" value="mail"/>
        <copy file="web/WEB-INF/applicationContext.xml"
            tofile="stage/web/WEB-INF/applicationContext.xml" overwrite="true" filtering="true" />
		<delete dir="stage/db"/>
		<copy todir="stage/db">
			<fileset dir="db"/>
		</copy>
        <copy todir="stage/db">
            <fileset dir="stage/db/empty"/>
        </copy>
		<mkdir dir="${artifactsDir}"/>
		<zip basedir="stage" destfile="${artifactsDir}/luntbuild-${fileVersion}.zip"/>
	</target>

    <target name="zip-source" depends="clean" description="Builds Luntbuild source zip distribution">
        <mkdir dir="${artifactsDir}"/>
        <zip basedir="." excludes=".settings/**,classes/**,website/**,.classpath,.project,"
            destfile="${artifactsDir}/luntbuild-${fileVersion}-source.zip"/>
    </target>

    <!-- Allows us to use the IzPack Ant task -->
    <taskdef name="izpack" classpath="installer/lib/standalone-compiler.jar"
        classname="com.izforge.izpack.ant.IzPackTask"/>

    <target name="installer" depends="stage" description="Builds Luntbuild installer">
		<delete dir="stage/db"/>
        <copy todir="stage/db">
            <fileset dir="db"/>
        </copy>
		<mkdir dir="${artifactsDir}"/>
		<filter token="appVersion" value="${buildVersion}" />
		<copy file="installer/install.xml" tofile="installer/install.xml.temp"
			overwrite="true" filtering="true" />
        <izpack input="${basedir}/installer/install.xml.temp"
            output="${artifactsDir}/luntbuild-${fileVersion}-installer.jar"
            installerType="standard"
            basedir="${basedir}/stage">
            </izpack>
    </target>

    <target name="weekly" depends="weekly.installer, weekly.source">
    </target>

    <target name="weekly.installer" depends="installer">
        <CBRelease file="${artifactsDir}/luntbuild-${fileVersion}-installer.jar"
            todir="/Downloads/Weekly" tofile="luntbuild-${fileVersion}-${buildDate}-installer.jar"
            description="Development snapshot of Luntbuild version: ${fileVersion}"
        />
    </target>

    <target name="weekly.source" depends="zip-source">
        <CBRelease file="${artifactsDir}/luntbuild-${fileVersion}-source.zip"
            todir="/Downloads/Weekly" tofile="luntbuild-${fileVersion}-source.zip"
            description="Development source snapshot of Luntbuild version: ${fileVersion}"
        />
    </target>

</project>