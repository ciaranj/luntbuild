<chapter id="firstproject">
<title>Creating a Project</title>
    <para>Click on Project Tab.</para>
    <para>
        The project page shows all projects configured in the current Luntbuild instance.
        A project is a buildable unit configured with information such as Version Control System,
        project builders and schedules.
    </para>
    <para>
        Click on the New Project icon
        <inlinemediaobject>
	        <imageobject><imagedata fileref="images/new.jpg" format="JPG" /> </imageobject>
	    </inlinemediaobject>
	    in the upper right corner of the tab's frame.
        <screenshot>
        <screeninfo>Create Project</screeninfo>
        <mediaobject>
            <imageobject><imagedata fileref="images/createproject.jpg" format="JPG" /> </imageobject>
        <textobject> <phrase>Create Project</phrase> </textobject>
        </mediaobject>
        </screenshot>
    </para>
    <variablelist>
        <varlistentry>
        <term>Name</term>
        <listitem><para>
            Provide a name to identify this project.
            The name will be used to identify this project, and cannot be changed later.
            Keep in mind that the name of the project will be used as a name of the sub-directory
            in Luntbuild's work and publish directories.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Description</term>
        <listitem><para>
            Specify project description.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Project admins</term>
        <listitem><para>
            Select the users who should be assigned the role of 'project admin'.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Project builders</term>
        <listitem><para>
            Select the users who should be assigned the role of 'project builders'.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Project viewers</term>
        <listitem><para>
            Select the users who should be assigned the role of 'project viewers'.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Notification methods</term>
        <listitem><para>
            Select the notification methods for the builds of this project.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Notification users</term>
        <listitem><para>
            Select the users who will get notified, when the builds of this project finish.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Variables</term>
        <listitem><para>
            Define variables for this project with one variable definition per line, for example:
            <simplelist>
            <member>a=1</member>
            <member>b=2</member>
            </simplelist>
            </para>
            <para>
			Values of these variables can be referenced or assigned in an OGNL expressions, for example
 			when constructing "next build version" property of the schedule.
            Numeric variables can even be increased or decreased,
 			for example, if you have two schedules with the name "nightly" and "release" respectively,
 			and you want the build of these two schedules to increase a global build version.
			You can define the following variables:
			<simplelist>
				<member>versionPart=foo-1.0.0</member>
				<member>iterationPart=1</member>
			</simplelist>
            </para>
            <para>
			And then set "next build version" of both schedules to be:
			<simplelist>
				<member>${project.var["versionPart"]} (${project.var["iterationPart"].increaseAsInt()})</member>
			</simplelist>
            </para>
            <para>
			This way, build version of both schedules will consist of two parts: the first part takes the value
			of the variable "versionPart", and the second part takes the value of the variable "iterationPart" and
            this part will increase with every build. Thus the build version of the consequent builds will look like:
			<simplelist>
				<member>foo-1.0.0 (build 1)</member>
				<member>foo-1.0.0 (build 2)</member>
				<member>foo-1.0.0 (build 3)</member>
				<member>...</member>
			</simplelist>
            </para>
            <para>
			You can define many other types of versioning strategies, refer to
			<emphasis>next build version</emphasis> property
			of a schedule for details.
        </para></listitem>
        </varlistentry>
        <varlistentry>
        <term>Log level</term>
        <listitem><para>
            Select the log level for this project.
        </para></listitem>
        </varlistentry>
   </variablelist>
</chapter>
